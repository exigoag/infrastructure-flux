apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: prometheus-stack
  namespace: monitoring
spec:
  interval: 1m0s
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 68.4.5
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  valuesFrom:
    - kind: Secret
      name: kube-prometheus-config
      optional: true
  values:
    #https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml
    defaultRules:
      disabled:
        KubeClientCertificateExpiration: true
      rules:
        kubeProxy: false
        kubeControllerManager: false
        kubeScheduler: false

    grafana:
      defaultDashboardsTimezone: Europe/Zurich
      ## Configure additional grafana datasources (passed through tpl)
      ## ref: http://docs.grafana.org/administration/provisioning/#datasources
      additionalDataSources:
        - name: "Loki"
          type: loki
          uid: loki
          url: http://loki.monitoring:3100
          access: proxy
          jsonData:
            handleGrafanaManagedAlerts: false
            implementation: prometheus
      # - name: prometheus-sample
      #   access: proxy
      #   basicAuth: true
      #   secureJsonData:
      #       basicAuthPassword: pass
      #   basicAuthUser: daco
      #   editable: false
      #   jsonData:
      #       tlsSkipVerify: true
      #   orgId: 1
      #   type: prometheus
      #   url: https://{{ printf "%s-prometheus.svc" .Release.Name }}:9090
      #   version: 1
      #ingress:
      #  enabled: true
      #  ingressClassName: nginx
      #  hosts:
      #    - #TODO
      #  tls:
      #    - hosts:
      #      - #TODO


    prometheus:
      prometheusSpec:
        replicas: 1
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        ruleSelectorNilUsesHelmValues: false
        storageSpec:
          volumeClaimTemplate:
            spec:
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 50Gi

    kubeControllerManager:
      enabled: false
    kubeScheduler:
      enabled: false
    #kubeEtcd:
    #  enabled: false
    kubeProxy:
      enabled: false